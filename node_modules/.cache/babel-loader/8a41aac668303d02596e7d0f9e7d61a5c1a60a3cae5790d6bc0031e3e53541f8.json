{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { thunk } from 'redux-thunk';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","composeWithDevTools","thunk","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["C:/Users/boukh/Desktop/proshop/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { thunk } from 'redux-thunk'; \r\nimport {productListReducer, productDetailsReducer} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer , userRegisterReducer , userDetailsReducer , userUpdateProfileReducer , userListReducer, userDeleteReducer } from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDetailsReducer , orderPayReducer, orderListMyReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart : cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister : userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    \r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n   \r\n    \r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n    ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n    : {}\r\n\r\nconst initialState = {\r\n    cart : { cartItems : cartItemsFromStorage,\r\n            shippingAddress : shippingAddressFromStorage\r\n    },\r\n    userLogin : { userInfo : userInfoFromStorage},\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,KAAK,QAAQ,aAAa;AACnC,SAAQC,kBAAkB,EAAEC,qBAAqB,QAAO,4BAA4B;AACpF,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,gBAAgB,EAAGC,mBAAmB,EAAGC,kBAAkB,EAAGC,wBAAwB,EAAGC,eAAe,EAAEC,iBAAiB,QAAQ,yBAAyB;AACrK,SAASC,kBAAkB,EAAEC,mBAAmB,EAAGC,eAAe,EAAEC,kBAAkB,QAAQ,0BAA0B;AAExH,MAAMC,OAAO,GAAGjB,eAAe,CAAC;EAC5BkB,WAAW,EAAEd,kBAAkB;EAC/Be,cAAc,EAAEd,qBAAqB;EACrCe,IAAI,EAAGd,WAAW;EAClBe,SAAS,EAAEd,gBAAgB;EAC3Be,YAAY,EAAGd,mBAAmB;EAClCe,WAAW,EAAEd,kBAAkB;EAC/Be,iBAAiB,EAAEd,wBAAwB;EAC3Ce,QAAQ,EAAEd,eAAe;EAEzBe,WAAW,EAAEb,kBAAkB;EAC/Bc,YAAY,EAAEb,mBAAmB;EACjCc,QAAQ,EAAEb,eAAe;EACzBc,WAAW,EAAEb;AAGjB,CAAC,CAAC;AAEF,MAAMc,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE;AAEnH,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI;AAElH,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GACpEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GACnD,CAAC,CAAC;AAER,MAAMK,YAAY,GAAG;EACjBjB,IAAI,EAAG;IAAEkB,SAAS,EAAGR,oBAAoB;IACjCS,eAAe,EAAGH;EAC1B,CAAC;EACDf,SAAS,EAAG;IAAEmB,QAAQ,EAAGL;EAAmB;AAChD,CAAC;AAED,MAAMM,UAAU,GAAG,CAACtC,KAAK,CAAC;AAE1B,MAAMuC,KAAK,GAAG3C,WAAW,CACrBkB,OAAO,EACPoB,YAAY,EACZnC,mBAAmB,CAACD,eAAe,CAAC,GAAGwC,UAAU,CAAC,CACtD,CAAC;AAED,eAAeC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}