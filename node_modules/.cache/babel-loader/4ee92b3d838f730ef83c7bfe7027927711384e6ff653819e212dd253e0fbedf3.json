{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from '../constants/orderConstants';\nimport { logout } from './userActions';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`http://localhost:5000/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    //   dispatch({\n    //     type: CART_CLEAR_ITEMS,\n    //     payload: data,\n    //   })\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://localhost:5000/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_FAIL","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_REQUEST","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","logout","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","localStorage","removeItem","error","message","response","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","ORDER_PAY_FAIL"],"sources":["C:/Users/boukh/Desktop/proshop/frontend/src/actions/orderActions.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,  \r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS}  from '../constants/orderConstants'\r\nimport { logout } from './userActions'\r\n\r\n\r\n\r\n    export const createOrder = (order) => async (dispatch, getState) => {\r\n        try {\r\n          dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n          })\r\n      \r\n          const {\r\n            userLogin: { userInfo },\r\n          } = getState()\r\n      \r\n          const config = {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n          }\r\n      \r\n          const { data } = await axios.post(`http://localhost:5000/api/orders`, order, config)\r\n      \r\n          dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n          })\r\n        //   dispatch({\r\n        //     type: CART_CLEAR_ITEMS,\r\n        //     payload: data,\r\n        //   })\r\n          localStorage.removeItem('cartItems')\r\n        } catch (error) {\r\n          const message =\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message\r\n          if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n          }\r\n          dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: message,\r\n          })\r\n        }\r\n      }\r\n\r\n\r\n      export const getOrderDetails = (id) => async (dispatch, getState) => {\r\n        try {\r\n          dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n          })\r\n      \r\n          const {\r\n            userLogin: { userInfo },\r\n          } = getState()\r\n      \r\n          const config = {\r\n            headers: {\r\n              Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n          }\r\n      \r\n          const { data } = await axios.get(`http://localhost:5000/api/orders/${id}`, config)\r\n      \r\n          dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n          })\r\n        } catch (error) {\r\n          const message =\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message\r\n          if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n          }\r\n          dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: message,\r\n          })\r\n        }\r\n      }\r\n\r\n      export const payOrder = (orderId, paymentResult) => async (\r\n        dispatch,\r\n        getState\r\n      ) => {\r\n        try {\r\n          dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n          })\r\n      \r\n          const {\r\n            userLogin: { userInfo },\r\n          } = getState()\r\n      \r\n          const config = {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n          }\r\n      \r\n          const { data } = await axios.put(\r\n            `/api/orders/${orderId}/pay`,\r\n            paymentResult,\r\n            config\r\n          )\r\n      \r\n          dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n          })\r\n        } catch (error) {\r\n          const message =\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message\r\n          if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n          }\r\n          dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: message,\r\n          })\r\n        }\r\n      }\r\n         \r\n      "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}